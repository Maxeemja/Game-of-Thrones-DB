{"version":3,"sources":["components/header/index.js","components/header/header.js","components/rowBlock/index.js","components/rowBlock/rowBlock.js","components/spinner/index.js","components/spinner/spinner.js","components/itemList/itemList.js","components/itemList/index.js","services/gotService.js","components/itemDetails/itemDetails.js","components/itemDetails/index.js","components/error/error.jpg","components/error/errorMessage.js","components/error/index.js","components/pages/characterPage.js","components/pages/booksPage.js","components/pages/housesPage.js","components/pages/booksItem.js","components/randomChar/randomChar.js","components/randomChar/index.js","components/app/app.js","components/app/index.js","index.js"],"names":["Header","className","to","RowBlock","left","right","Row","Col","md","Spinner","ItemList","getData","onItemSelected","renderItem","useState","itemList","updateList","useEffect","then","data","items","map","item","label","onClick","id","defaultProps","GotService","getAllCharacters","a","randNum","Math","round","random","getResource","res","_transformCharacter","getCharacter","character","getAllBooks","_transformBook","getBook","book","getAllHouses","_transformHouse","getHouse","house","isSet","_extractId","url","replace","char","name","gender","born","died","culture","region","words","titles","overlord","numberOfPages","publisher","released","this","_apiBase","fetch","ok","Error","status","json","Field","field","ItemDetails","gotService","state","updateItem","prevProps","props","itemId","getInfo","setState","style","color","React","Children","children","child","cloneElement","Component","ErrorMessage","src","img","alt","CharacterPage","selectedChar","error","personDetails","BooksPage","history","push","withRouter","HousesPage","selectedHouse","itemDetails","BooksItem","bookId","RandomChar","loading","onCharLoaded","onError","err","updateChar","floor","catch","timerId","setInterval","interval","clearInterval","errorMessage","spinner","content","View","App","showRandomChar","toggleRandomChar","console","log","Container","lg","size","offset","path","exact","component","render","match","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4a1c70b4.chunk.js","sourcesContent":["import Header from './header';\n\nexport default Header;","import React from 'react';\nimport './header.css';\nimport { Link } from 'react-router-dom';\n\n\nconst Header = () => {\n    return (\n        <div className=\"header\">\n            <h3 className=\"header-title\">\n                <Link to=\"/\">\n                Game of Thrones DB\n                </Link>\n            </h3>\n            <ul className=\"header-list\">\n                <li>\n                    <Link to=\"/characters/\">Characters</Link>\n                </li>\n                <li>\n                    <Link to=\"/houses/\">Houses</Link>\n                </li>\n                <li>\n                    <Link to=\"/books/\">Books</Link>   \n                </li>\n            </ul>\n        </div>\n    );\n};\n\nexport default Header;","import RowBlock from \"./rowBlock\";\r\nexport default RowBlock;","import React from 'react';\r\nimport {Col, Row} from 'reactstrap';\r\n\r\nconst RowBlock = ({left, right}) => {\r\n    return (\r\n        <Row>\r\n            <Col md='6'>\r\n                {left}\r\n            </Col>\r\n            <Col md='6'>\r\n                {right}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default RowBlock;","import Spinner from './spinner';\nexport default Spinner;","import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () => {\n    return (\n        <div className=\"lds-css ng-scope\">\n            <div className=\"lds-spin\"><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div></div>\n        </div>\n    )\n}\n\nexport default Spinner;","import React, {useState, useEffect} from 'react';\nimport './itemList.css';\nimport  Spinner  from '../spinner';\nimport PropTypes from 'prop-types';\n\n\nfunction ItemList({getData, onItemSelected, renderItem})  {\n\n    const [itemList, updateList] = useState([]);\n\n    \n\n    useEffect(() => {\n        getData()\n            .then( (data) => {\n                updateList(data);\n            })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n\n    function renderItems(arr){\n        return arr.map((item) => {\n\n            const label = renderItem(item);\n\n            return(\n                <li \n                    key={item.id}\n                    className=\"list-group-item\"\n                    onClick={ () => onItemSelected(item.id)}>\n                    {label}\n                </li>\n            )\n        })\n    }\n\n\n    if(!itemList){\n        return <Spinner/>;\n    }\n    \n    const items = renderItems(itemList);\n\n    return (\n        <ul className=\"item-list list-group\">\n            {items}\n        </ul>\n    );\n    \n}\nItemList.defaultProps = {\n    onItemSelected: () => {}\n}\n\nItemList.propTypes = {\n    onItemSelected: PropTypes.func\n}\nexport default ItemList;","import ItemList from './itemList';\n\nexport default ItemList;","\nexport default class GotService {\n    constructor() {\n        this._apiBase = 'https://www.anapioficeandfire.com/api';\n    }\n\n    async getResource(url) {\n        const res = await fetch(`${this._apiBase}${url}`);\n    \n        if (!res.ok) {\n          throw new Error(`Could not fetch ${url}` +\n            `, received ${res.status}`);\n        }\n        return await res.json();\n    }\n\n    getAllCharacters = async () => {\n        let randNum = Math.round(Math.random() * (63 - 1) + 1) ;\n        const res = await this.getResource(`/characters?page=${randNum}&pageSize=10`);\n        return res.map(this._transformCharacter);\n    }\n    \n    getCharacter = async (id) => {\n        const character = await this.getResource(`/characters/${id}`);\n        return this._transformCharacter(character);\n    }\n\n    getAllBooks = async () => {\n        const res = await this.getResource(`/books?page=1&pageSize=10`);\n        return res.map(this._transformBook);\n    }\n    \n    getBook = async(id) =>  {\n        const book = await this.getResource(`/books/${id}`);\n        return this._transformBook(book);\n    }\n    \n    getAllHouses = async () => {\n        let randNum = Math.round(Math.random() * (44 - 1) + 1) ;\n        const res = await this.getResource(`/houses?page=${randNum}&pageSize=10`);\n        return res.map(this._transformHouse);\n    }\n    \n    getHouse = async (id) => {\n        const house = await this.getResource(`/houses/${id}`);\n        return this._transformHouse(house);\n    }\n\n    isSet = (data) => {\n        \n        if (data) {\n            return data\n        } else {\n            return 'no data :('\n        }\n    }\n\n    _extractId = (item) => {\n        return item.url.replace(/\\D/g, '');\n    }\n\n    _transformCharacter = (char) => {\n        return {\n            id: this._extractId(char),\n            name: this.isSet(char.name),\n            gender: this.isSet(char.gender),\n            born: this.isSet(char.born),\n            died: this.isSet(char.died), \n            culture: this.isSet(char.culture)\n        };\n    }\n\n    _transformHouse = (house) => {\n        return {\n            id: this._extractId(house),\n            name: house.name,\n            region:  this.isSet(house.region),\n            words: house.words !== '' ? this.isSet(house.words) : 'no-data :(',\n            titles: this.isSet(house.titles),\n            overlord: this.isSet(house.overlord),\n        };\n    }\n    \n    _transformBook = (book) => {\n        return {\n            id: this._extractId(book),\n            name: book.name,\n            numberOfPages: book.numberOfPages,\n            publisher: book.publisher,\n            released: book.released.replace('T00:00:00', '')\n        };\n    }\n}\n","import React, {Component} from 'react';\nimport gotService from '../../services/gotService';\nimport './itemDetails.css';\n\nconst Field = ({item, field, label}) => {\n    return(\n        <li className=\"list-group-item d-flex justify-content-between\">\n            <span className=\"term\">{label}</span>\n            <span>{item[field]}</span>\n        </li>\n    )\n}\n\nexport {Field}\n\nexport default class ItemDetails extends Component {\n\n    gotService = new gotService();\n\n    state = {\n        item: null\n    }\n\n    componentDidMount() {\n        this.updateItem();\n    }\n\n    componentDidUpdate(prevProps){\n        if (this.props.itemId !== prevProps.itemId) {\n            this.updateItem();\n        }\n    }\n\n    updateItem() {\n        const {itemId, getInfo} = this.props;\n        if(!itemId) {\n            return;\n        }\n\n        getInfo(itemId)\n            .then((item) => {\n                this.setState({item});\n            })\n    }\n\n    render() {\n\n        if(!this.state.item) {\n            return <span className=\"select-error\" style={{color: '#fff'}}>Please select something!</span>\n        }\n        const {item} = this.state;\n        const {name} = item;\n\n        return (\n            <div className=\"item-details rounded\">\n                <h4>{name}</h4>\n                <ul className=\"list-group list-group-flush\">\n                    {\n                        React.Children.map(this.props.children, (child) => {\n                            return React.cloneElement(child, {item})\n                        })\n                    }\n                </ul>\n            </div>\n        );\n}\n}","import ItemDetails, {Field} from './itemDetails';\n\nexport default ItemDetails;\nexport {Field}","export default __webpack_public_path__ + \"static/media/error.4a53f279.jpg\";","import React from 'react';\nimport img from './error.jpg';\nimport './error.css';\n\nconst ErrorMessage = () => {\n    return (\n        <>\n            <img src={img} alt=\"err\"></img>\n            <span className=\"span-error\">Something goes wrong :(</span>\n        </>\n    )\n    \n}\nexport default ErrorMessage;","import ErrorMessage from './errorMessage';\nexport default ErrorMessage;","import React, {Component} from 'react';\r\nimport RowBlock from '../rowBlock';\r\nimport ItemList from '../itemList';\r\nimport ItemDetails, {Field} from '../itemDetails';\r\nimport ErrorMessage from '../error';\r\nimport gotService from '../../services/gotService';\r\n\r\n\r\n\r\n\r\nexport default class CharacterPage extends Component {\r\n\r\n    gotService = new gotService();\r\n\r\n    state = {\r\n        selectedChar: null,\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(){\r\n        this.setState({error: true});\r\n    }\r\n\r\n\r\n    onItemSelected = (id) => {\r\n        this.setState({\r\n            selectedChar: id\r\n        })\r\n    }\r\n\r\n    render(){\r\n        if(this.state.error){\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        const itemList = (\r\n            <ItemList onItemSelected={this.onItemSelected} \r\n                getData={this.gotService.getAllCharacters}\r\n                renderItem={(item) => `${item.name} (${item.gender})`}/>\r\n        )\r\n        \r\n        const personDetails = (\r\n            <ItemDetails itemId={this.state.selectedChar} \r\n                getInfo={this.gotService.getCharacter}>\r\n                <Field field='gender' label='Gender' />\r\n                <Field field='born' label='Born' />\r\n                <Field field='died' label='Died' />\r\n                <Field field='culture' label='Culture' />\r\n            </ItemDetails>\r\n        )\r\n\r\n\r\n        return(\r\n            <RowBlock left={itemList} right={personDetails}/> \r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport ItemList from '../itemList';\r\nimport ErrorMessage from '../error';\r\nimport gotService from '../../services/gotService';\r\nimport { withRouter } from 'react-router';\r\n\r\n\r\n\r\nclass BooksPage extends Component {\r\n\r\n    gotService = new gotService();\r\n\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(){\r\n        this.setState({error: true});\r\n    }\r\n\r\n\r\n    render(){\r\n        if(this.state.error){\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n\r\n\r\n        return(\r\n            <ItemList onItemSelected={(itemId)=> {\r\n                    this.props.history.push(itemId)\r\n                } } \r\n                getData={this.gotService.getAllBooks}\r\n                renderItem={(item) => `${item.name} (${item.released})`}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(BooksPage);","import React, {Component} from 'react';\r\nimport RowBlock from '../rowBlock';\r\nimport ItemList from '../itemList';\r\nimport ItemDetails, {Field} from '../itemDetails';\r\nimport ErrorMessage from '../error';\r\nimport gotService from '../../services/gotService';\r\n\r\n\r\n\r\n\r\nexport default class HousesPage extends Component {\r\n\r\n    gotService = new gotService();\r\n\r\n    state = {\r\n        selectedHouse: null,\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(){\r\n        this.setState({error: true});\r\n    }\r\n\r\n\r\n    onItemSelected = (id) => {\r\n        this.setState({\r\n            selectedHouse: id\r\n        })\r\n    }\r\n\r\n    render(){\r\n        if(this.state.error){\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        const itemList = (\r\n            <ItemList \r\n                onItemSelected={this.onItemSelected} \r\n                getData={this.gotService.getAllHouses}\r\n                renderItem={(item) => `${item.name}`}/>\r\n        )\r\n        \r\n        const itemDetails = (\r\n            <ItemDetails itemId={this.state.selectedHouse} \r\n                getInfo={this.gotService.getHouse}>\r\n                <Field field='region' label='Region' />\r\n                <Field field='words' label='Words' />\r\n                <Field field='titles' label='Titles' />\r\n                <Field field='overlord' label='Overlord' />\r\n            </ItemDetails>\r\n        )\r\n\r\n\r\n        return(\r\n            <RowBlock left={itemList} right={itemDetails}/> \r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport gotService from '../../services/gotService';\r\nimport ItemDetails, {Field} from '../itemDetails';\r\n\r\nexport default class BooksItem extends Component {\r\n    gotService = new gotService();\r\n\r\n\r\n    render(){\r\n        return(\r\n            <ItemDetails \r\n                itemId={this.props.bookId} \r\n                getInfo={this.gotService.getBook}>\r\n                <Field field='numberOfPages' label='Number of pages' />\r\n                <Field field='released' label='Released' />\r\n                <Field field='publisher' label='Publisher' />\r\n            </ItemDetails>\r\n        )\r\n    }\r\n\r\n}","import React, {Component} from 'react';\nimport './randomChar.css';\nimport gotService from '../../services/gotService';\nimport Spinner from '../spinner/';\nimport ErrorMessage from '../error/errorMessage';\nimport PropTypes from 'prop-types';\n\nexport default class RandomChar extends Component {\n\n    \n    gotService = new gotService();\n    state = {\n        char : {},\n        loading: true,\n        error: false\n    };\n\n    componentDidMount() {\n        this.updateChar();\n        this.timerId = setInterval(this.updateChar, this.props.interval);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerId)\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n\n        });\n    };\n\n    onError = (err) => {\n        this.setState({\n            error: true,\n            loading: false\n        });\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random()*140 + 25);\n        this.gotService\n          .getCharacter(id)\n          .then(this.onCharLoaded)\n          .catch(this.onError);\n    }\n\n    render() {\n\n        const {char, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char} /> : null;\n        \n\n        return (\n            <div className=\"random-block rounded\">\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        );\n    }\n}\n\nRandomChar.defaultProps = {\n    interval: 15000\n}\nRandomChar.propTypes = {\n    interval: PropTypes.number\n}\n\nconst View = ({char}) => {\n    const {name, gender, born, died, culture} = char;\n\n    return (\n        <>\n            <h4>Random Character: {name}</h4>\n            <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Gender </span>\n                    <span>{gender}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Born </span>\n                    <span>{born}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Died </span>\n                    <span>{died}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Culture </span>\n                    <span>{culture}</span>\n                </li>\n            </ul>\n        </>\n    )\n}","import RandomChar from './randomChar';\n\nexport default RandomChar;","import React, {Component} from 'react';\nimport {Col, Row, Container} from 'reactstrap';\nimport Header from '../header';\nimport {CharacterPage, BooksPage, HousesPage, BooksItem} from '../pages';\nimport RandomChar from '../randomChar';\nimport ErrorMessage from '../error';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport './app.css';\n\nexport default class App extends Component {\n    state = {\n        showRandomChar: true,\n        error: false\n    }\n\n    componentDidCatch(){\n        console.log('error!');\n        this.setState({error: true});\n    }\n\n    toggleRandomChar = () => {\n        this.setState((state) => {\n            return {\n                showRandomChar: !state.showRandomChar\n            }\n        });\n    }\n\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage/>\n        }\n        const char = this.state.showRandomChar ? <RandomChar /> : null;\n        return (\n            <Router>\n                <div className=\"app\"> \n                <Container>\n                    <Header />\n                </Container>\n                <Container>\n                    <Row>\n                        <Col lg={{size: 5, offset: 0}}>\n                            {char}\n                            <button \n                                className=\"toggle-btn\"\n                                onClick={this.toggleRandomChar}>Toggle random character</button>\n                        </Col>\n                    </Row>\n\n\n                    <Route path='/' exact component={() => <h1 className=\"welcome\">Welcome to GoT Database!</h1>} />\n                    <Route path='/characters' component={CharacterPage} />\n                    <Route path='/houses' component={HousesPage} />\n                    <Route path='/books' exact component={BooksPage} />\n                    <Route path='/books/:id' render={\n                        ({match}) => {\n                            const id = match.params.id;\n                        return <BooksItem bookId={id} />}\n                    } />\n\n                </Container>\n                </div>\n            </Router>\n        );\n    }\n};","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}